@page "/manage-materials"

@inject MaterialPostServices MaterialPostServices

<div class="container">
	<div class="d-flex justify-content-between align-items-center">
		<h3>Управление Материалами</h3>
		<NavLink href="/manage-materials/new" class="btn btn-primary btn-sm">Добавить материал</NavLink>
	</div>
	<hr/>
	</div>
<table class="table">
	<thead>
	<th>Id</th>
	<th>Название</th>
	<th>Количество</th>
	<th>Коментарий</th>
	<th></th>
	</thead>
	<tbody>
		@if(_isLoading)
		{
			<tr>
				<td colspan="5" class="text-center">Загрузка материалов</td>
			</tr>
		}
		else if (!_isLoading && (_proposalMaterial is null || !_proposalMaterial.Any()))
		{
			<tr>
				<td colspan="5" class="text-center">
					<h3 class="mb-3">Материалы не найдены</h3>
					<NavLink href="/manage-materials/new">Добавить первый материал</NavLink>
					</td>
			</tr>
		}
		else
		{
			int sno = 1;
			@foreach (var proposalMaterial in _proposalMaterial!)
			{
				var editMaterialLink = $"/manage-materials/edit/{proposalMaterial.Id:int?}";

				<tr>
					<td>@(sno++)</td>
					<td>@proposalMaterial.Id</td>
					<td>@proposalMaterial.MaterialName</td>
					<td>@proposalMaterial.Quantity</td>
					<td>@proposalMaterial.Comment</td>
					<td><NavLink href="@editMaterialLink" class="btn btn-primary btn-sm">Редактировать</NavLink></td>
				</tr>
			}
		}
	</tbody>
</table>

@code {
	private bool _isLoading= false;
	private IEnumerable<ProposalMaterial>? _proposalMaterial = null;

	protected override async Task OnInitializedAsync()
	{
		_isLoading = true;
		try
		{
			_proposalMaterial = await MaterialPostServices.GetProposalMaterialsAsync();
		}
		catch(Exception ex)
		{
			//throw;
		}
		finally
		{
			_isLoading = false;
		}
	}
}
